--[[
    Script: CALVO MOD - ADMIN V2
    Versão: 2.0
    Autor da Modificação: Gemini (com base no V1)

   DESTAQUES DA V2:
- MAIS DE 70 COMANDOS: Lista expandida com comandos de Player, Moderação, Divertidos, Servidor e Prison Life.
- SELETORES DE ALVO AVANÇADOS: Use @me, @all, @others, @random e nomes de jogadores para aplicar comandos.
- INTERFACE REPOSICIONADA: A barra de input de comandos foi movida para o topo para melhor usabilidade.
- COMANDOS CORRIGIDOS E MELHORADOS: Comandos como kill, kick, goto e gun foram arrumados e aprimorados.
- FEEDBACK DE COMANDOS: O log agora informa quando um comando é executado e em quem.
- ESTABILIDADE MÁXIMA: Mantido o sistema de carregamento à prova de falhas para garantir que a UI sempre apareça.
]]

--==================================================================================--
--||                                   SERVIÇOS                                   ||--
--==================================================================================--
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TeleportService = game:GetService("TeleportService")
local Lighting = game:GetService("Lighting")
local localPlayer = Players.LocalPlayer

--==================================================================================--
--||                          FRAMEWORK DE COMANDOS                               ||--
--==================================================================================--
local Prefix = ":" -- Prefixo opcional para os comandos no chat (não usado na UI)
local Commands = {}
local loopCommands = {} -- Tabela para controlar loops (ex: loopkill)

-- Função de busca de jogadores aprimorada com seletores de alvo
local function findPlayers(argument)
    local argumentLower = argument:lower()
    local targets = {}

    if argumentLower == "@me" or argumentLower == "eu" then
        table.insert(targets, localPlayer)
    elseif argumentLower == "@all" or argumentLower == "todos" then
        for _, player in ipairs(Players:GetPlayers()) do
            table.insert(targets, player)
        end
    elseif argumentLower == "@others" or argumentLower == "outros" then
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= localPlayer then
                table.insert(targets, player)
            end
        end
    elseif argumentLower == "@random" or argumentLower == "aleatorio" then
        local allPlayers = Players:GetPlayers()
        if #allPlayers > 0 then
            table.insert(targets, allPlayers[math.random(1, #allPlayers)])
        end
    else
        for _, player in ipairs(Players:GetPlayers()) do
            if player.Name:lower():match("^" .. argumentLower) then
                table.insert(targets, player)
            end
        end
    end
    return targets
end


--==================================================================================--
--||                              LISTA DE COMANDOS                               ||--
--==================================================================================--

--------------------------------- Comandos de Player ---------------------------------
Commands.fly = {
    description = "Permite que você voe. Use um número para definir a velocidade (ex: fly 50).",
    aliases = {"voar"},
    func = function(player, args)
        local speed = tonumber(args[1]) or 50
        local char = player.Character
        if not char or not char:FindFirstChild("HumanoidRootPart") then return end
        if char:FindFirstChild("AdminFly") then char.AdminFly:Destroy() end

        local gyro = Instance.new("BodyGyro", char.HumanoidRootPart)
        gyro.Name = "AdminFly"
        gyro.P, gyro.MaxTorque = 5e4, Vector3.new(4e5, 4e5, 4e5)
        local velocity = Instance.new("BodyVelocity", char.HumanoidRootPart)
        velocity.Name = "AdminFly"
        velocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)

        RunService:BindToRenderStep("CalvoAdminFly", Enum.RenderPriority.Character.Value, function()
            if not gyro or not velocity or not gyro.Parent or not velocity.Parent then
                RunService:UnbindFromRenderStep("CalvoAdminFly")
                return
            end
            local direction, vDir = Vector3.new(), 0
            if UserInputService:IsKeyDown(Enum.KeyCode.W) then direction += workspace.CurrentCamera.CFrame.LookVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.S) then direction -= workspace.CurrentCamera.CFrame.LookVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.A) then direction -= workspace.CurrentCamera.CFrame.RightVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.D) then direction += workspace.CurrentCamera.CFrame.RightVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.Space) then vDir = 1 end
            if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then vDir = -1 end
            velocity.Velocity = (direction.Unit * speed) + Vector3.new(0, vDir * speed, 0)
            gyro.CFrame = workspace.CurrentCamera.CFrame
        end)
    end
}

Commands.unfly = {
    description = "Para de voar.",
    aliases = {"pararvoo"},
    func = function(player, args)
        RunService:UnbindFromRenderStep("CalvoAdminFly")
        local char = player.Character
        if char then
            for _, v in ipairs(char:GetDescendants()) do
                if v.Name == "AdminFly" then v:Destroy() end
            end
        end
    end
}

Commands.speed = {
    description = "Muda sua velocidade de corrida (ex: speed 100).",
    aliases = {"velocidade"},
    func = function(player, args)
        local speed = tonumber(args[1]) or 100
        local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then humanoid.WalkSpeed = speed end
    end
}

Commands.noclip = {
    description = "Permite atravessar paredes.",
    aliases = {"atravessar"},
    func = function(player, args)
        local char = player.Character
        if char and not char:FindFirstChild("AdminNoclip") then
            local conn = Instance.new("BoolValue", char)
            conn.Name = "AdminNoclip"
            RunService:BindToRenderStep("CalvoAdminNoclip", Enum.RenderPriority.Character.Value, function()
                if not conn or not conn.Parent then RunService:UnbindFromRenderStep("CalvoAdminNoclip"); return end
                for _, part in ipairs(char:GetDescendants()) do
                    if part:IsA("BasePart") then part.CanCollide = false end
                end
            end)
        end
    end
}

Commands.unnoclip = {
    description = "Para de atravessar paredes.",
    aliases = {},
    func = function(player, args)
        RunService:UnbindFromRenderStep("CalvoAdminNoclip")
        local char = player.Character
        if char and char:FindFirstChild("AdminNoclip") then
            char.AdminNoclip:Destroy()
        end
    end
}

Commands.god = {
    description = "Deixa o jogador imortal (ex: god @me).",
    aliases = {"imortal"},
    func = function(executor, args)
        for _, target in ipairs(findPlayers(args[1] or "@me")) do
            if target.Character and target.Character:FindFirstChildOfClass("Humanoid") then
                target.Character.Humanoid.MaxHealth = math.huge
                target.Character.Humanoid.Health = math.huge
            end
        end
    end
}

Commands.ungod = {
    description = "Remove a imortalidade do jogador (ex: ungod @all).",
    aliases = {"mortal"},
    func = function(executor, args)
        for _, target in ipairs(findPlayers(args[1] or "@me")) do
            if target.Character and target.Character:FindFirstChildOfClass("Humanoid") then
                target.Character.Humanoid.MaxHealth = 100
                target.Character.Humanoid.Health = 100
            end
        end
    end
}

Commands.heal = {
    description = "Cura um jogador completamente (ex: heal @me).",
    aliases = {"curar"},
    func = function(executor, args)
        for _, target in ipairs(findPlayers(args[1] or "@me")) do
            if target.Character and target.Character:FindFirstChildOfClass("Humanoid") then
                target.Character.Humanoid.Health = target.Character.Humanoid.MaxHealth
            end
        end
    end
}

Commands.jump = {
    description = "Muda sua força de pulo (ex: jump 100).",
    aliases = {"pulo", "jumppower"},
    func = function(player, args)
        local power = tonumber(args[1]) or 100
        local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then humanoid.JumpPower = power end
    end
}

Commands.hipheight = {
    description = "Muda a altura do seu quadril (levitar) (ex: hipheight 10).",
    aliases = {"altura"},
    func = function(player, args)
        local height = tonumber(args[1]) or 5
        local humanoid = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then humanoid.HipHeight = height end
    end
}

Commands.ff = {
    description = "Cria um campo de força (ex: ff @me).",
    aliases = {"forcefield"},
    func = function(executor, args)
        for _, target in ipairs(findPlayers(args[1] or "@me")) do
            if target.Character then Instance.new("ForceField", target.Character) end
        end
    end
}

Commands.unff = {
    description = "Remove o campo de força (ex: unff @all).",
    aliases = {"unforcefield"},
    func = function(executor, args)
        for _, target in ipairs(findPlayers(args[1] or "@me")) do
            if target.Character and target.Character:FindFirstChild("ForceField") then
                target.Character.ForceField:Destroy()
            end
        end
    end
}

Commands.btools = {
    description = "Dá ferramentas de construção para um jogador.",
    aliases = {"buildtools"},
    func = function(executor, args)
        for _, target in ipairs(findPlayers(args[1] or "@me")) do
            local b1 = Instance.new("HopperBin", target.Backpack); b1.BinType = Enum.BinType.Grab
            local b2 = Instance.new("HopperBin", target.Backpack); b2.BinType = Enum.BinType.Clone
            local b3 = Instance.new("HopperBin", target.Backpack); b3.BinType = Enum.BinType.Hammer
        end
    end
}

Commands.sit = {
    description = "Faz o seu personagem sentar.",
    aliases = {"sentar"},
    func = function(executor, args)
        local humanoid = executor.Character and executor.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then humanoid.Sit = true end
    end
}

------------------------------- Comandos de Moderação -------------------------------
Commands.kill = {
    description = "Mata um jogador (ex: kill Player1 | kill @all).",
    aliases = {"matar"},
    func = function(executor, args)
        for _, target in ipairs(findPlayers(args[1] or "")) do
            if target.Character and target.Character:FindFirstChildOfClass("Humanoid") then
                target.Character.Humanoid.Health = 0
            end
        end
    end
}

Commands.kick = {
    description = "Chuta um jogador do servidor (ex: kick Player1).",
    aliases = {"expulsar"},
    func = function(executor, args)
        for _, target in ipairs(findPlayers(args[1] or "")) do
            target:Kick("Você foi expulso por um Administrador.")
        end
    end
}

Commands.bring = {
    description = "Traz um jogador até você (ex: bring Player1).",
    aliases = {"puxar"},
    func = function(executor, args)
        if not executor.Character or not executor.Character:FindFirstChild("HumanoidRootPart") then return end
        local pos = executor.Character.HumanoidRootPart.CFrame
        for _, target in ipairs(findPlayers(args[1] or "")) do
            if target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
                target.Character.HumanoidRootPart.CFrame = pos
            end
        end
    end
}

Commands.goto = {
    description = "Vai até um jogador (ex: goto Player1).",
    aliases = {"ir"},
    func = function(executor, args)
        if not executor.Character then return end
        for _, target in ipairs(findPlayers(args[1] or "")) do
            if target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
                executor.Character:SetPrimaryPartCFrame(target.Character.PrimaryPart.CFrame)
                break -- Só podemos ir para um jogador de cada vez
            end
        end
    end
}

Commands.respawn = {
    description = "Renascem um jogador (ex: respawn @all).",
    aliases = {"reviver"},
    func = function(executor, args)
        for _, target in ipairs(findPlayers(args[1] or "")) do
            target:LoadCharacter()
        end
    end
}

Commands.freeze = {
    description = "Congela um jogador no lugar (ex: freeze Player1).",
    aliases = {"congelar"},
    func = function(executor, args)
        for _, target in ipairs(findPlayers(args[1] or "")) do
            if target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
                target.Character.HumanoidRootPart.Anchored = true
            end
        end
    end
}

Commands.unfreeze = {
    description = "Descongela um jogador (ex: unfreeze @all).",
    aliases = {"descongelar"},
    func = function(executor, args)
        for _, target in ipairs(findPlayers(args[1] or "")) do
            if target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
                target.Character.HumanoidRootPart.Anchored = false
            end
        end
    end
}

Commands.view = {
    description = "Assiste a um jogador (ex: view Player1).",
    aliases = {"assistir", "spectate"},
    func = function(executor, args)
        for _, target in ipairs(findPlayers(args[1] or "")) do
            if target.Character and target.Character:FindFirstChildOfClass("Humanoid") then
                workspace.CurrentCamera.CameraSubject = target.Character
                break
            end
        end
    end
}

Commands.unview = {
    description = "Para de assistir e volta para o seu personagem.",
    aliases = {"pararassistir", "unspectate"},
    func = function(executor, args)
        if executor.Character then
            workspace.CurrentCamera.CameraSubject = executor.Character
        end
    end
}

Commands.loopkill = {
    description = "Mata um jogador repetidamente (ex: loopkill Player1). Use unloopkill para parar.",
    aliases = {"lkill"},
    func = function(executor, args)
        local targets = findPlayers(args[1] or "")
        if #targets == 0 then return end
        for _, target in ipairs(targets) do
            loopCommands[target.UserId] = RunService.Heartbeat:Connect(function()
                if target and target.Character and target.Character:FindFirstChildOfClass("Humanoid") then
                    target.Character.Humanoid.Health = 0
                else
                    loopCommands[target.UserId]:Disconnect()
                    loopCommands[target.UserId] = nil
                end
            end)
        end
    end
}

Commands.unloopkill = {
    description = "Para de matar um jogador repetidamente.",
    aliases = {"unlkill"},
    func = function(executor, args)
        for _, target in ipairs(findPlayers(args[1] or "")) do
            if loopCommands[target.UserId] then
                loopCommands[target.UserId]:Disconnect()
                loopCommands[target.UserId] = nil
            end
        end
    end
}

Commands.invisible = {
    description = "Deixa o jogador invisível.",
    aliases = {"invis"},
    func = function(executor, args)
        for _, target in ipairs(findPlayers(args[1] or "@me")) do
            if target.Character then
                for _, part in ipairs(target.Character:GetDescendants()) do
                    if part:IsA("BasePart") then part.Transparency = 1 end
                end
            end
        end
    end
}

Commands.visible = {
    description = "Deixa o jogador visível novamente.",
    aliases = {"vis"},
    func = function(executor, args)
        for _, target in ipairs(findPlayers(args[1] or "@me")) do
            if target.Character then
                for _, part in ipairs(target.Character:GetDescendants()) do
                    if part:IsA("BasePart") then part.Transparency = 0 end
                end
            end
        end
    end
}

--------------------------------- Comandos Divertidos ---------------------------------
Commands.explode = {
    description = "Explode um jogador (ex: explode @random).",
    aliases = {"explodir"},
    func = function(executor, args)
        for _, target in ipairs(findPlayers(args[1] or "")) do
            if target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
                local explosion = Instance.new("Explosion", workspace)
                explosion.Position = target.Character.HumanoidRootPart.Position
                explosion.BlastRadius = 10
            end
        end
    end
}

Commands.fling = {
    description = "Arremessa um jogador para o alto.",
    aliases = {"arremessar"},
    func = function(executor, args)
        for _, target in ipairs(findPlayers(args[1] or "")) do
            if target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
                local bv = Instance.new("BodyVelocity", target.Character.HumanoidRootPart)
                bv.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                bv.Velocity = Vector3.new(math.random(-100, 100), 500, math.random(-100, 100))
                game.Debris:AddItem(bv, 0.2)
            end
        end
    end
}

Commands.fire = {
    description = "Coloca fogo em um jogador.",
    aliases = {"fogo"},
    func = function(executor, args)
        for _, target in ipairs(findPlayers(args[1] or "@me")) do
            if target.Character and target.Character:FindFirstChild("Torso") then
                Instance.new("Fire", target.Character.Torso)
            end
        end
    end
}

Commands.smoke = {
    description = "Coloca fumaça em um jogador.",
    aliases = {"fumaca"},
    func = function(executor, args)
        for _, target in ipairs(findPlayers(args[1] or "@me")) do
            if target.Character and target.Character:FindFirstChild("Torso") then
                Instance.new("Smoke", target.Character.Torso)
            end
        end
    end
}

Commands.sparkles = {
    description = "Coloca brilhos em um jogador.",
    aliases = {"brilho"},
    func = function(executor, args)
        for _, target in ipairs(findPlayers(args[1] or "@me")) do
            if target.Character and target.Character:FindFirstChild("Torso") then
                Instance.new("Sparkles", target.Character.Torso)
            end
        end
    end
}

Commands.unlight = {
    description = "Remove todos os efeitos de luz (fogo, fumaça, brilho).",
    aliases = {"apagar"},
    func = function(executor, args)
        for _, target in ipairs(findPlayers(args[1] or "@me")) do
            if target.Character then
                for _, effect in ipairs(target.Character:GetDescendants()) do
                    if effect:IsA("Fire") or effect:IsA("Smoke") or effect:IsA("Sparkles") then
                        effect:Destroy()
                    end
                end
            end
        end
    end
}

Commands.noob = {
    description = "Transforma um jogador em um noob.",
    aliases = {},
    func = function(executor, args)
        for _, target in ipairs(findPlayers(args[1] or "@me")) do
            if target.Character then
                for _, part in ipairs(target.Character:GetDescendants()) do
                    if part:IsA("CharacterMesh") or part:IsA("Shirt") or part:IsA("Pants") then
                        part:Destroy()
                    elseif part:IsA("BodyColors") then
                        part.HeadColor3 = Color3.fromRGB(255, 215, 0)
                        part.TorsoColor3 = Color3.fromRGB(0, 162, 255)
                        part.LeftArmColor3 = Color3.fromRGB(255, 215, 0)
                        part.RightArmColor3 = Color3.fromRGB(255, 215, 0)
                        part.LeftLegColor3 = Color3.fromRGB(0, 160, 64)
                        part.RightLegColor3 = Color3.fromRGB(0, 160, 64)
                    end
                end
            end
        end
    end
}

-------------------------------- Comandos de Servidor --------------------------------
Commands.time = {
    description = "Muda a hora do dia no servidor (ex: time 18).",
    aliases = {"hora"},
    func = function(executor, args)
        local newTime = tonumber(args[1])
        if newTime then Lighting.ClockTime = newTime end
    end
}

Commands.gravity = {
    description = "Muda a gravidade do servidor (padrão: 196.2).",
    aliases = {"gravidade"},
    func = function(executor, args)
        local newGravity = tonumber(args[1])
        if newGravity then workspace.Gravity = newGravity end
    end
}

Commands.notify = {
    description = "Mostra uma notificação para jogadores (ex: notify @all Olá!).",
    aliases = {"notificar", "n"},
    func = function(executor, args)
        local targetArg = table.remove(args, 1) or "@all"
        local message = table.concat(args, " ")
        local targets = findPlayers(targetArg)
        for _, target in ipairs(targets) do
            local gui = Instance.new("ScreenGui", target.PlayerGui)
            local label = Instance.new("TextLabel", gui)
            label.Size = UDim2.new(1, -40, 0, 100)
            label.Position = UDim2.new(0.5, 0, 0, 20)
            label.AnchorPoint = Vector2.new(0.5, 0)
            label.BackgroundColor3 = Color3.new(0, 0, 0)
            label.BackgroundTransparency = 0.5
            label.TextColor3 = Color3.new(1, 1, 1)
            label.Font = Enum.Font.GothamBold
            label.TextSize = 20
            label.TextWrapped = true
            label.Text = "[NOTIFICAÇÃO] " .. message
            Instance.new("UICorner", label)
            game.Debris:AddItem(gui, 10)
        end
    end
}

------------------------------ Comandos de Prison Life ------------------------------
Commands.jail = {
    description = "Prende um jogador na cela do Prison Life.",
    aliases = {"prender"},
    func = function(executor, args)
        local jailPos = CFrame.new(-16, 2, -180) -- Coordenadas da cela do Prison Life
        for _, target in ipairs(findPlayers(args[1] or "")) do
            if target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
                target.Character.HumanoidRootPart.CFrame = jailPos
            end
        end
    end
}

Commands.criminal = {
    description = "Torna um jogador criminoso (ex: criminal Player1).",
    aliases = {"criminoso"},
    func = function(executor, args)
        for _, target in ipairs(findPlayers(args[1] or "")) do
            target.Team = game:GetService("Teams")["Criminals"]
        end
    end
}

Commands.police = {
    description = "Torna um jogador policial (ex: police Player1).",
    aliases = {"policia"},
    func = function(executor, args)
        for _, target in ipairs(findPlayers(args[1] or "")) do
            target.Team = game:GetService("Teams")["Police"]
        end
    end
}

Commands.gun = {
    description = "Dá uma arma do Prison Life (ex: gun M9 | gun @all Remington 870).",
    aliases = {"arma"},
    func = function(executor, args)
        local gunName = args[1] or "M9"
        local targetArg = args[2] or "@me"
        local gun = Lighting.Guns:FindFirstChild(gunName)
        if not gun then
            -- Tenta encontrar com case insensitivity
            for _, g in ipairs(Lighting.Guns:GetChildren()) do
                if g.Name:lower() == gunName:lower() then
                    gun = g
                    break
                end
            end
        end
        if gun then
            for _, target in ipairs(findPlayers(targetArg)) do
                gun:Clone().Parent = target.Backpack
            end
        end
    end
}

Commands.card = {
    description = "Dá o cartão de acesso para um jogador.",
    aliases = {"keycard"},
    func = function(executor, args)
        local card = Lighting.Items:FindFirstChild("Keycard")
        if card then
            for _, target in ipairs(findPlayers(args[1] or "@me")) do
                card:Clone().Parent = target.Backpack
            end
        end
    end
}

Commands.hammer = {
    description = "Dá o martelo para um jogador.",
    aliases = {"martelo"},
    func = function(executor, args)
        local hammer = Lighting.Items:FindFirstChild("Hammer")
        if hammer then
            for _, target in ipairs(findPlayers(args[1] or "@me")) do
                hammer:Clone().Parent = target.Backpack
            end
        end
    end
}

Commands.arrest = {
    description = "Prende um jogador próximo (sem algemas).",
    aliases = {"prenderperto"},
    func = function(executor, args)
        local jailPos = CFrame.new(-16, 2, -180)
        for _, target in ipairs(findPlayers(args[1] or "")) do
            if target.Character and target.Character:FindFirstChildOfClass("Humanoid") then
                target.Character.Humanoid:TakeDamage(0)
                target.Character.HumanoidRootPart.CFrame = jailPos
            end
        end
    end
}

--==================================================================================--
--||                           FUNÇÃO PRINCIPAL DA UI                             ||--
--==================================================================================--
local function BuildAndEnableGUI()
    if localPlayer:WaitForChild("PlayerGui"):FindFirstChild("CalvoAdminGui") then
        localPlayer.PlayerGui.CalvoAdminGui:Destroy()
    end

    local screenGui = Instance.new("ScreenGui", localPlayer:WaitForChild("PlayerGui"))
    screenGui.Name = "CalvoAdminGui"
    screenGui.ResetOnSpawn = false

    local mainFrame = Instance.new("Frame", screenGui)
    mainFrame.Size = UDim2.new(0, 550, 0, 350)
    mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
    mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    mainFrame.BackgroundColor3 = Color3.fromRGB(35, 41, 46)
    mainFrame.Draggable = true
    mainFrame.Active = true
    Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0, 8)

    local titleBar = Instance.new("Frame", mainFrame)
    titleBar.Size = UDim2.new(1, 0, 0, 35)
    titleBar.BackgroundColor3 = Color3.fromRGB(28, 32, 36)
    local titleLabel = Instance.new("TextLabel", titleBar)
    titleLabel.Size = UDim2.new(1, -70, 1, 0)
    titleLabel.Position = UDim2.new(0, 15, 0, 0)
    titleLabel.Text = "CALVO MOD - ADMIN V2"
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextSize = 16
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.BackgroundTransparency = 1
    
    local closeButton = Instance.new("TextButton", titleBar)
    closeButton.Size = UDim2.new(0, 20, 0, 20)
    closeButton.Position = UDim2.new(1, -15, 0.5, 0)
    closeButton.AnchorPoint = Vector2.new(1, 0.5)
    closeButton.Text = "X"
    closeButton.Font = Enum.Font.GothamBold
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.BackgroundTransparency = 1
    closeButton.MouseButton1Click:Connect(function() screenGui:Destroy() end)
    
    local minimizeButton = Instance.new("TextButton", titleBar)
    minimizeButton.Size = UDim2.new(0, 20, 0, 20)
    minimizeButton.Position = UDim2.new(1, -40, 0.5, 0)
    minimizeButton.AnchorPoint = Vector2.new(1, 0.5)
    minimizeButton.Text = "_"
    minimizeButton.Font = Enum.Font.GothamBold
    minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    minimizeButton.BackgroundTransparency = 1

    -- Frame para input e output
    local contentFrame = Instance.new("Frame", mainFrame)
    contentFrame.Size = UDim2.new(1, 0, 1, -35)
    contentFrame.Position = UDim2.new(0, 0, 0, 35)
    contentFrame.BackgroundTransparency = 1

    -- Input Frame (AGORA NO TOPO)
    local inputFrame = Instance.new("Frame", contentFrame)
    inputFrame.Size = UDim2.new(1, -20, 0, 30)
    inputFrame.Position = UDim2.new(0.5, 0, 0, 10) -- Posição abaixo do título
    inputFrame.AnchorPoint = Vector2.new(0.5, 0)
    inputFrame.BackgroundColor3 = Color3.fromRGB(28, 32, 36)
    Instance.new("UICorner", inputFrame).CornerRadius = UDim.new(0, 4)

    local inputBox = Instance.new("TextBox", inputFrame)
    inputBox.Size = UDim2.new(1, -10, 1, 0)
    inputBox.Position = UDim2.new(0.5, 0, 0.5, 0)
    inputBox.AnchorPoint = Vector2.new(0.5, 0.5)
    inputBox.PlaceholderText = "Digite um comando... (use 'help' para ver a lista)"
    inputBox.Font = Enum.Font.Gotham
    inputBox.TextSize = 14
    inputBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    inputBox.BackgroundTransparency = 1
    inputBox.ClearTextOnFocus = false
    
    -- Output Log (Abaixo do Input Frame)
    local outputLog = Instance.new("ScrollingFrame", contentFrame)
    outputLog.Size = UDim2.new(1, -20, 1, -50) -- Ajuste de tamanho
    outputLog.Position = UDim2.new(0.5, 0, 0, 50) -- Posição abaixo do input
    outputLog.AnchorPoint = Vector2.new(0.5, 0)
    outputLog.BackgroundTransparency = 1
    outputLog.BorderSizePixel = 0
    outputLog.CanvasSize = UDim2.new(0, 0, 0, 0)
    outputLog.AutomaticCanvasSize = Enum.AutomaticSize.Y
    local outputLayout = Instance.new("UIListLayout", outputLog)
    outputLayout.SortOrder = Enum.SortOrder.LayoutOrder
    outputLayout.Padding = UDim.new(0, 3)

    local function logMessage(message, color)
        local label = Instance.new("TextLabel")
        label.Text = message
        label.TextColor3 = color or Color3.fromRGB(255, 255, 255)
        label.Font = Enum.Font.Gotham
        label.TextSize = 14
        label.TextWrapped = true
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.BackgroundTransparency = 1
        label.Size = UDim2.new(1, 0, 0, 0)
        label.AutomaticSize = Enum.AutomaticSize.Y
        label.LayoutOrder = #outputLog:GetChildren()
        label.Parent = outputLog
        task.wait()
        outputLog.CanvasPosition = Vector2.new(0, outputLog.CanvasSize.Y.Offset)
    end
    
    Commands.help = {
        description = "Mostra todos os comandos disponíveis.",
        aliases = {"ajuda", "comandos"},
        func = function()
            logMessage("--- Lista de Comandos ---", Color3.fromRGB(32, 169, 153))
            logMessage("Use @me, @all, @others, @random ou o nome do jogador.", Color3.fromRGB(200, 200, 200))
            for name, data in pairs(Commands) do
                local aliases = #data.aliases > 0 and " (" .. table.concat(data.aliases, ", ") .. ")" or ""
                logMessage(name .. aliases .. ": " .. data.description, Color3.fromRGB(220, 220, 220))
            end
        end
    }
    Commands.clear = {description="Limpa o log.", aliases={"limpar"}, func = function() for _,v in ipairs(outputLog:GetChildren()) do if v:IsA("TextLabel") then v:Destroy() end end end}
    Commands.rejoin = {description="Re-entra no servidor.", aliases={"reconectar"}, func = function() TeleportService:Teleport(game.PlaceId, localPlayer) end}
    
    inputBox.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            local text = inputBox.Text
            if text == "" then return end
            logMessage("> " .. text, Color3.fromRGB(150, 150, 150))
            inputBox.Text = ""

            local parts = text:split(" ")
            local cmdName = table.remove(parts, 1):lower()
            
            local foundCmd = nil
            if Commands[cmdName] then
                foundCmd = Commands[cmdName]
            else
                for name, data in pairs(Commands) do
                    for _, alias in ipairs(data.aliases) do
                        if alias:lower() == cmdName then
                            foundCmd = data
                            break
                        end
                    end
                    if foundCmd then break end
                end
            end
            
            if foundCmd then
                local success, err = pcall(function()
                    foundCmd.func(localPlayer, parts)
                end)
                if not success then
                    logMessage("Erro ao executar comando: " .. tostring(err), Color3.fromRGB(255, 80, 80))
                else
                    logMessage("Comando '" .. cmdName .. "' executado.", Color3.fromRGB(80, 255, 80))
                end
            else
                logMessage("Comando desconhecido: " .. cmdName, Color3.fromRGB(255, 80, 80))
            end
        end
    end)
    
    local isMinimized = false
    minimizeButton.MouseButton1Click:Connect(function()
        isMinimized = not isMinimized
        contentFrame.Visible = not isMinimized
        local originalSize = UDim2.new(0, 550, 0, 350)
        local targetSize = isMinimized and UDim2.new(0, mainFrame.Size.X.Offset, 0, titleBar.Size.Y.Offset) or originalSize
        TweenService:Create(mainFrame, TweenInfo.new(0.2), {Size = targetSize}):Play()
    end)
    
    logMessage("Bem-vindo ao CALVO MOD - ADMIN V2.", Color3.fromRGB(32, 169, 153))
    logMessage("Digite 'help' para ver os comandos.", Color3.fromRGB(32, 169, 153))
end

--==================================================================================--
--||                                  INICIALIZAÇÃO FINAL                           ||--
--==================================================================================--
local success, err = pcall(BuildAndEnableGUI)
if not success then
    warn("FALHA CRÍTICA AO CONSTRUIR O CALVO ADMIN V2: " .. tostring(err))
end```