--[[
    SCRIPT: Painel CALVO MOD (Versão 3.0 - AI Edition)
    DESCRIÇÃO: Versão completa com funcionalidades estáveis, controles para celular,
    painel minimizado móvel e um assistente AI para comandos.
    AUTOR: Gemini
    VERSÃO: 3.0

    INSTRUÇÕES:
    1. Crie um 'LocalScript' em 'StarterPlayer.StarterPlayerScripts'.
    2. Copie e cole TODO este código no script.
--]]

--======= SERVIÇOS E VARIÁVEIS GLOBAIS =======--
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local localPlayer = Players.LocalPlayer
local playerGui = localPlayer:WaitForChild("PlayerGui")
local camera = workspace.CurrentCamera

-- Variáveis de controle de estado
local character, humanoid, rootPart
local isFlying, isGodMode, isNoclip, hasForcefield = false, false, false, false
local flyConnection, noclipConnection, spectateConnection
local originalWalkSpeed, originalMaxHealth = 16, 100
local currentPlayerTarget = nil

--======= FUNÇÕES DE MOD (A LÓGICA DAS OPÇÕES) =======--

local function getCharacter()
    if not localPlayer.Character or not localPlayer.Character.Parent or not localPlayer.Character:FindFirstChild("HumanoidRootPart") then
        return false
    end
    character = localPlayer.Character
    humanoid = character:WaitForChild("Humanoid")
    rootPart = character:WaitForChild("HumanoidRootPart")
    return true
end

localPlayer.CharacterAdded:Connect(function(char)
    getCharacter()
    char:WaitForChild("Humanoid").WalkSpeed = originalWalkSpeed
    char:WaitForChild("Humanoid").MaxHealth = originalMaxHealth
    -- Reaplicar mods
    setGodMode(isGodMode)
    setForcefield(hasForcefield)
    setNoclip(isNoclip)
end)
getCharacter() -- Primeira chamada

-- Funções de Mod individuais
local function setGodMode(enabled)
    isGodMode = enabled
    if getCharacter() then
        humanoid.MaxHealth = enabled and math.huge or originalMaxHealth
        if enabled then humanoid.Health = humanoid.MaxHealth end
    end
end

local function setForcefield(enabled)
    hasForcefield = enabled
    if getCharacter() then
        local ff = character:FindFirstChildOfClass("ForceField")
        if enabled and not ff then
            Instance.new("ForceField", character)
        elseif not enabled and ff then
            ff:Destroy()
        end
    end
end

local function setSpeed(speed)
    if getCharacter() then
        originalWalkSpeed = speed
        humanoid.WalkSpeed = speed
    end
end

local function setNoclip(enabled)
    isNoclip = enabled
    if getCharacter() then
        if enabled and not noclipConnection then
            noclipConnection = RunService.Stepped:Connect(function()
                for _, part in pairs(character:GetDescendants()) do
                    if part:IsA("BasePart") and part.CanCollide then part.CanCollide = false end
                end
            end)
        elseif not enabled and noclipConnection then
            noclipConnection:Disconnect()
            noclipConnection = nil
        end
    end
end

local flyButtonsFrame -- Frame para botões de voo no celular

local function setFly(enabled)
    isFlying = enabled
    if not getCharacter() then return end

    if enabled then
        humanoid:ChangeState(Enum.HumanoidStateType.Physics)
        local bodyGyro = Instance.new("BodyGyro", rootPart)
        bodyGyro.Name = "FlyGyro"
        bodyGyro.MaxTorque = Vector3.new(0, 9e9, 0)
        bodyGyro.P = 20000

        local bodyVel = Instance.new("BodyVelocity", rootPart)
        bodyVel.Name = "FlyVelocity"
        bodyVel.MaxForce = Vector3.new(9e9, 9e9, 9e9)
        bodyVel.Velocity = Vector3.new(0, 0, 0)

        flyConnection = RunService.Heartbeat:Connect(function()
            if not isFlying then return end
            local flySpeed = 50
            local moveDirection = humanoid.MoveDirection
            local verticalDirection = 0

            if UserInputService:IsKeyDown(Enum.KeyCode.W) then moveDirection = camera.CFrame.LookVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.S) then moveDirection = -camera.CFrame.LookVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.A) then moveDirection = -camera.CFrame.RightVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.D) then moveDirection = camera.CFrame.RightVector end
            if UserInputService:IsKeyDown(Enum.KeyCode.Space) then verticalDirection = 1 end
            if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then verticalDirection = -1 end

            bodyGyro.CFrame = CFrame.new(rootPart.Position, rootPart.Position + camera.CFrame.LookVector)
            bodyVel.Velocity = (moveDirection * flySpeed) + Vector3.new(0, verticalDirection * flySpeed, 0)
        end)
        if UserInputService.TouchEnabled then flyButtonsFrame.Visible = true end
    else
        if flyConnection then flyConnection:Disconnect(); flyConnection = nil end
        if rootPart and rootPart:FindFirstChild("FlyGyro") then rootPart.FlyGyro:Destroy() end
        if rootPart and rootPart:FindFirstChild("FlyVelocity") then rootPart.FlyVelocity:Destroy() end
        humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
        if UserInputService.TouchEnabled then flyButtonsFrame.Visible = false end
    end
end

-- Funções de Ação do Jogador
local stopSpectateButton -- Declarado aqui para ser acessível globalmente

local function teleportToPlayer(targetPlayer)
    if getCharacter() and targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        rootPart.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame
    end
end

local function pullPlayer(targetPlayer)
    if getCharacter() and targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        pcall(function() targetPlayer.Character.HumanoidRootPart.CFrame = rootPart.CFrame end)
    end
end

local function copySkin(targetPlayer)
    if getCharacter() and targetPlayer and targetPlayer.Character then
        for _, v in pairs(character:GetChildren()) do if v:IsA("Accessory") or v:IsA("Shirt") or v:IsA("Pants") or v:IsA("BodyColors") then v:Destroy() end end
        for _, v in pairs(targetPlayer.Character:GetChildren()) do if v:IsA("Accessory") or v:IsA("Shirt") or v:IsA("Pants") or v:IsA("BodyColors") then v:Clone().Parent = character end end
    end
end

local function spectatePlayer(targetPlayer, stop)
    if stop then
        if spectateConnection then spectateConnection:Disconnect(); spectateConnection = nil end
        if getCharacter() then camera.CameraType = Enum.CameraType.Custom; camera.CameraSubject = humanoid end
        if stopSpectateButton then stopSpectateButton.Visible = false end
        return
    end

    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Humanoid") then
        camera.CameraType = Enum.CameraType.Scriptable
        if stopSpectateButton then stopSpectateButton.Visible = true end
        spectateConnection = RunService.RenderStepped:Connect(function()
            if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                camera.CFrame = CFrame.new(targetPlayer.Character.HumanoidRootPart.Position) * CFrame.new(0, 10, 20)
            else
                spectatePlayer(nil, true)
            end
        end)
    end
end

--======= CRIAÇÃO DA INTERFACE GRÁFICA (GUI) =======--
local screenGui = Instance.new("ScreenGui"); screenGui.Name = "CalvoModScreenGui"; screenGui.ResetOnSpawn = false; screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling; screenGui.Parent = playerGui;
local modPanel = Instance.new("Frame"); modPanel.Name = "ModPanel"; modPanel.Size = UDim2.new(0, 650, 0, 450); modPanel.Position = UDim2.new(0.5, 0, 0.5, 0); modPanel.AnchorPoint = Vector2.new(0.5, 0.5); modPanel.BackgroundColor3 = Color3.fromRGB(26, 26, 26); modPanel.BackgroundTransparency = 0.3; modPanel.ClipsDescendants = true; modPanel.Parent = screenGui; Instance.new("UICorner", modPanel).CornerRadius = UDim.new(0, 12); Instance.new("UIStroke", modPanel).Transparency = 0.9;
local panelHeader = Instance.new("Frame"); panelHeader.Name = "PanelHeader"; panelHeader.Size = UDim2.new(1, 0, 0, 48); panelHeader.BackgroundColor3 = Color3.fromRGB(59, 59, 59); panelHeader.BackgroundTransparency = 0.4; panelHeader.Parent = modPanel;
local headerTitleContainer = Instance.new("Frame"); headerTitleContainer.Name = "HeaderTitleContainer"; headerTitleContainer.Size = UDim2.new(1, -120, 1, 0); headerTitleContainer.Position = UDim2.new(0, 0, 0, 0); headerTitleContainer.BackgroundTransparency = 1; headerTitleContainer.Parent = panelHeader;
local uiListLayoutTitle = Instance.new("UIListLayout"); uiListLayoutTitle.FillDirection = Enum.FillDirection.Horizontal; uiListLayoutTitle.VerticalAlignment = Enum.VerticalAlignment.Center; uiListLayoutTitle.Padding = UDim.new(0, 8); uiListLayoutTitle.Parent = headerTitleContainer;
local icon = Instance.new("ImageLabel"); icon.Name = "Icon"; icon.Image = "rbxassetid://6031219436"; icon.Size = UDim2.new(0, 24, 0, 24); icon.BackgroundTransparency = 1; icon.ImageColor3 = Color3.fromRGB(220, 220, 220); icon.Parent = headerTitleContainer;
local titleLabel = Instance.new("TextLabel"); titleLabel.Name = "TitleLabel"; titleLabel.Text = "CALVO MOD"; titleLabel.Font = Enum.Font.SourceSansBold; titleLabel.TextSize = 18; titleLabel.TextColor3 = Color3.fromRGB(220, 220, 220); titleLabel.BackgroundTransparency = 1; titleLabel.TextXAlignment = Enum.TextXAlignment.Left; titleLabel.Size = UDim2.new(0, 150, 1, 0); titleLabel.Parent = headerTitleContainer;
local uiPaddingTitle = Instance.new("UIPadding"); uiPaddingTitle.PaddingLeft = UDim.new(0, 12); uiPaddingTitle.Parent = headerTitleContainer;
local controlButtons = Instance.new("Frame"); controlButtons.Name = "ControlButtons"; controlButtons.Size = UDim2.new(0, 100, 1, 0); controlButtons.Position = UDim2.new(1, -110, 0, 0); controlButtons.BackgroundTransparency = 1; controlButtons.Parent = panelHeader;
local uiListLayoutControls = Instance.new("UIListLayout"); uiListLayoutControls.FillDirection = Enum.FillDirection.Horizontal; uiListLayoutControls.VerticalAlignment = Enum.VerticalAlignment.Center; uiListLayoutControls.HorizontalAlignment = Enum.HorizontalAlignment.Right; uiListLayoutControls.Padding = UDim.new(0, 8); uiListLayoutControls.Parent = controlButtons;
local closeButton = Instance.new("TextButton"); closeButton.Name = "CloseButton"; closeButton.Size = UDim2.new(0, 18, 0, 18); closeButton.Text = ""; closeButton.BackgroundColor3 = Color3.fromRGB(255, 89, 89); closeButton.Parent = controlButtons; Instance.new("UICorner", closeButton).CornerRadius = UDim.new(1, 0);
local minimizeButton = Instance.new("TextButton"); minimizeButton.Name = "MinimizeButton"; minimizeButton.Size = UDim2.new(0, 18, 0, 18); minimizeButton.Text = ""; minimizeButton.BackgroundColor3 = Color3.fromRGB(255, 189, 74); minimizeButton.Parent = controlButtons; Instance.new("UICorner", minimizeButton).CornerRadius = UDim.new(1, 0);
local maximizeButton = Instance.new("TextButton"); maximizeButton.Name = "MaximizeButton"; maximizeButton.Size = UDim2.new(0, 18, 0, 18); maximizeButton.Text = ""; maximizeButton.BackgroundColor3 = Color3.fromRGB(89, 204, 89); maximizeButton.Parent = controlButtons; Instance.new("UICorner", maximizeButton).CornerRadius = UDim.new(1, 0);
local mainContentContainer = Instance.new("Frame"); mainContentContainer.Name = "MainContentContainer"; mainContentContainer.Size = UDim2.new(1, 0, 1, -48); mainContentContainer.Position = UDim2.new(0, 0, 0, 48); mainContentContainer.BackgroundTransparency = 1; mainContentContainer.Parent = modPanel;
local uiListLayoutMain = Instance.new("UIListLayout"); uiListLayoutMain.FillDirection = Enum.FillDirection.Horizontal; uiListLayoutMain.Parent = mainContentContainer;
local sidebar = Instance.new("Frame"); sidebar.Name = "Sidebar"; sidebar.Size = UDim2.new(0, 160, 1, 0); sidebar.BackgroundTransparency = 1; sidebar.Parent = mainContentContainer;
local uiStrokeSidebar = Instance.new("UIStroke"); uiStrokeSidebar.ApplyStrokeMode = Enum.ApplyStrokeMode.Border; uiStrokeSidebar.Color = Color3.fromRGB(255, 255, 255); uiStrokeSidebar.Transparency = 0.9; uiStrokeSidebar.LineJoinMode = Enum.LineJoinMode.Miter; uiStrokeSidebar.Thickness = 1; uiStrokeSidebar.Parent = sidebar;
local uiListLayoutSidebar = Instance.new("UIListLayout"); uiListLayoutSidebar.Padding = UDim.new(0, 4); uiListLayoutSidebar.SortOrder = Enum.SortOrder.LayoutOrder; uiListLayoutSidebar.Parent = sidebar;
local uiPaddingSidebar = Instance.new("UIPadding"); uiPaddingSidebar.PaddingTop = UDim.new(0, 16); uiPaddingSidebar.Parent = sidebar;
local contentArea = Instance.new("Frame"); contentArea.Name = "ContentArea"; contentArea.Size = UDim2.new(1, -160, 1, 0); contentArea.BackgroundTransparency = 1; contentArea.ClipsDescendants = true; contentArea.Parent = mainContentContainer;
local uiPaddingContent = Instance.new("UIPadding"); uiPaddingContent.PaddingLeft = UDim.new(0, 24); uiPaddingContent.PaddingRight = UDim.new(0, 24); uiPaddingContent.PaddingTop = UDim.new(0, 16); uiPaddingContent.PaddingBottom = UDim.new(0, 16); uiPaddingContent.Parent = contentArea;

-- Seções de Conteúdo
local mainContent = Instance.new("Frame"); mainContent.Name = "main-content"; mainContent.Size = UDim2.new(1, 0, 1, 0); mainContent.BackgroundTransparency = 1; mainContent.Visible = true; mainContent.Parent = contentArea;
local playersContent = Instance.new("Frame"); playersContent.Name = "players-content"; playersContent.Size = UDim2.new(1, 0, 1, 0); playersContent.BackgroundTransparency = 1; playersContent.Visible = false; playersContent.Parent = contentArea;
local settingsContent = Instance.new("Frame"); settingsContent.Name = "settings-content"; settingsContent.Size = UDim2.new(1, 0, 1, 0); settingsContent.BackgroundTransparency = 1; settingsContent.Visible = false; settingsContent.Parent = contentArea;
local aiContent = Instance.new("Frame"); aiContent.Name = "ai-content"; aiContent.Size = UDim2.new(1, 0, 1, 0); aiContent.BackgroundTransparency = 1; aiContent.Visible = false; aiContent.Parent = contentArea;

-- Elementos Seção MAIN
local mainLayout = Instance.new("UIListLayout"); mainLayout.Padding = UDim.new(0, 10); mainLayout.Parent = mainContent;
local mainTitle = Instance.new("TextLabel"); mainTitle.Text = "MAIN"; mainTitle.Font = Enum.Font.SourceSansBold; mainTitle.TextSize = 20; mainTitle.TextColor3 = Color3.fromRGB(240, 240, 240); mainTitle.BackgroundTransparency = 1; mainTitle.TextXAlignment = Enum.TextXAlignment.Left; mainTitle.Size = UDim2.new(1, 0, 0, 24); mainTitle.Parent = mainContent;
local mainDesc = Instance.new("TextLabel"); mainDesc.Text = "Controles principais do mod."; mainDesc.Font = Enum.Font.SourceSans; mainDesc.TextSize = 14; mainDesc.TextColor3 = Color3.fromRGB(160, 160, 160); mainDesc.BackgroundTransparency = 1; mainDesc.TextXAlignment = Enum.TextXAlignment.Left; mainDesc.Size = UDim2.new(1, 0, 0, 20); mainDesc.Parent = mainContent;

local function createToggleOption(parent, text, callback)
    local toggleFrame = Instance.new("Frame"); toggleFrame.Name = text .. "Option"; toggleFrame.Size = UDim2.new(1, 0, 0, 40); toggleFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60); toggleFrame.BackgroundTransparency = 0.5; toggleFrame.Parent = parent; Instance.new("UICorner", toggleFrame).CornerRadius = UDim.new(0, 8);
    local uiListLayout = Instance.new("UIListLayout"); uiListLayout.FillDirection = Enum.FillDirection.Horizontal; uiListLayout.VerticalAlignment = Enum.VerticalAlignment.Center; uiListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Right; uiListLayout.Padding = UDim.new(0, 12); uiListLayout.Parent = toggleFrame;
    local label = Instance.new("TextLabel"); label.Name = "Label"; label.Text = text; label.Font = Enum.Font.SourceSansBold; label.TextSize = 14; label.TextColor3 = Color3.fromRGB(220, 220, 220); label.BackgroundTransparency = 1; label.TextXAlignment = Enum.TextXAlignment.Left; label.Size = UDim2.new(1, -70, 1, 0); label.Parent = toggleFrame; Instance.new("UIPadding", label).PaddingLeft = UDim.new(0, 12);
    local toggleButton = Instance.new("TextButton"); toggleButton.Name = "ToggleButton"; toggleButton.Size = UDim2.new(0, 48, 0, 24); toggleButton.Text = ""; toggleButton.BackgroundColor3 = Color3.fromRGB(90, 90, 90); toggleButton.Parent = toggleFrame;
    local switchHandle = Instance.new("Frame"); switchHandle.Name = "SwitchHandle"; switchHandle.Size = UDim2.new(0, 16, 0, 16); switchHandle.Position = UDim2.new(0, 4, 0.5, 0); switchHandle.AnchorPoint = Vector2.new(0, 0.5); switchHandle.BackgroundColor3 = Color3.fromRGB(255, 255, 255); switchHandle.Parent = toggleButton;
    local isEnabled = false
    toggleButton.MouseButton1Click:Connect(function()
        isEnabled = not isEnabled
        local color = isEnabled and Color3.fromRGB(74, 194, 95) or Color3.fromRGB(90, 90, 90); local pos = isEnabled and UDim2.new(1, -20, 0.5, 0) or UDim2.new(0, 4, 0.5, 0);
        TweenService:Create(toggleButton, TweenInfo.new(0.2), {BackgroundColor3 = color}):Play(); TweenService:Create(switchHandle, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {Position = pos}):Play();
        callback(isEnabled)
    end)
end
local function createSliderOption(parent, text, min, max, initial, callback)
    local sliderFrame = Instance.new("Frame"); sliderFrame.Name = text .. "Slider"; sliderFrame.Size = UDim2.new(1, 0, 0, 60); sliderFrame.BackgroundTransparency = 1; sliderFrame.Parent = parent;
    local titleLayout = Instance.new("UIListLayout"); titleLayout.FillDirection = Enum.FillDirection.Horizontal; titleLayout.VerticalAlignment = Enum.VerticalAlignment.Center; titleLayout.Parent = sliderFrame;
    local label = Instance.new("TextLabel"); label.Text = text; label.Font = Enum.Font.SourceSansBold; label.TextSize = 14; label.TextColor3 = Color3.fromRGB(220, 220, 220); label.BackgroundTransparency = 1; label.TextXAlignment = Enum.TextXAlignment.Left; label.Size = UDim2.new(0.5, 0, 0, 20); label.Parent = titleLayout;
    local valueLabel = Instance.new("TextLabel"); valueLabel.Text = tostring(initial); valueLabel.Font = Enum.Font.SourceSans; valueLabel.TextSize = 14; valueLabel.TextColor3 = Color3.fromRGB(200, 200, 200); valueLabel.BackgroundTransparency = 1; valueLabel.TextXAlignment = Enum.TextXAlignment.Right; valueLabel.Size = UDim2.new(0.5, -10, 0, 20); valueLabel.Parent = titleLayout;
    local track = Instance.new("Frame"); track.Size = UDim2.new(1, 0, 0, 8); track.Position = UDim2.new(0,0,0,25); track.BackgroundColor3 = Color3.fromRGB(60, 60, 60); track.Parent = sliderFrame; Instance.new("UICorner", track).CornerRadius = UDim.new(1,0);
    local fill = Instance.new("Frame"); fill.Size = UDim2.new((initial - min) / (max - min), 0, 1, 0); fill.BackgroundColor3 = Color3.fromRGB(59, 130, 246); fill.Parent = track; Instance.new("UICorner", fill).CornerRadius = UDim.new(1,0);
    local handle = Instance.new("TextButton"); handle.Size = UDim2.new(0, 16, 0, 16); handle.AnchorPoint = Vector2.new(0.5, 0.5); handle.Position = UDim2.new(fill.Size.X.Scale, 0, 0.5, 0); handle.BackgroundColor3 = Color3.fromRGB(255, 255, 255); handle.Text = ""; handle.Parent = track; Instance.new("UICorner", handle).CornerRadius = UDim.new(1,0);
    handle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            local moveConn; moveConn = UserInputService.InputChanged:Connect(function(moveInput)
                if moveInput.UserInputType == Enum.UserInputType.MouseMovement or moveInput.UserInputType == Enum.UserInputType.Touch then
                    local newX = math.clamp(moveInput.Position.X - track.AbsolutePosition.X, 0, track.AbsoluteSize.X); local percentage = newX / track.AbsoluteSize.X; local value = math.floor(min + (max - min) * percentage + 0.5);
                    handle.Position = UDim2.new(percentage, 0, 0.5, 0); fill.Size = UDim2.new(percentage, 0, 1, 0); valueLabel.Text = tostring(value);
                    callback(value)
                end
            end)
            local upConn; upConn = UserInputService.InputEnded:Connect(function(upInput) if upInput.UserInputType == Enum.UserInputType.MouseButton1 or upInput.UserInputType == Enum.UserInputType.Touch then moveConn:Disconnect(); upConn:Disconnect() end end)
        end
    end)
end
createToggleOption(mainContent, "Modo Deus", setGodMode)
createToggleOption(mainContent, "Forcefield", setForcefield)
createToggleOption(mainContent, "Voo", setFly)
createToggleOption(mainContent, "Noclip", setNoclip)
createSliderOption(mainContent, "Velocidade", 16, 200, originalWalkSpeed, setSpeed)

-- Elementos Seção PLAYERS
local playersLayout = Instance.new("UIListLayout"); playersLayout.Padding = UDim.new(0, 10); playersLayout.Parent = playersContent;
local playersTitle = mainTitle:Clone(); playersTitle.Text = "Players"; playersTitle.Parent = playersContent;
local playersDesc = mainDesc:Clone(); playersDesc.Text = "Lista de jogadores no servidor."; playersDesc.Size = UDim2.new(1,0,0,20); playersDesc.Parent = playersContent;
local updatePlayersButton = Instance.new("TextButton"); updatePlayersButton.Name = "UpdatePlayersButton"; updatePlayersButton.Text = "Atualizar Lista de Jogadores"; updatePlayersButton.Font = Enum.Font.SourceSansBold; updatePlayersButton.TextSize = 14; updatePlayersButton.TextColor3 = Color3.fromRGB(255, 255, 255); updatePlayersButton.BackgroundColor3 = Color3.fromRGB(59, 130, 246); updatePlayersButton.Size = UDim2.new(1, 0, 0, 36); updatePlayersButton.Parent = playersContent; Instance.new("UICorner", updatePlayersButton).CornerRadius = UDim.new(0, 8);
local playerListContainer = Instance.new("ScrollingFrame"); playerListContainer.Name = "PlayerListContainer"; playerListContainer.Size = UDim2.new(1, 0, 1, -120); playerListContainer.BackgroundTransparency = 1; playerListContainer.BorderSizePixel = 0; playerListContainer.ScrollBarThickness = 6; playerListContainer.Parent = playersContent;
local uiListLayoutPlayers = Instance.new("UIListLayout"); uiListLayoutPlayers.Padding = UDim.new(0, 4); uiListLayoutPlayers.Parent = playerListContainer;

-- Elementos Seção SETTINGS
local settingsLayout = Instance.new("UIListLayout"); settingsLayout.Padding = UDim.new(0, 10); settingsLayout.Parent = settingsContent;
local settingsTitle = mainTitle:Clone(); settingsTitle.Text = "Settings"; settingsTitle.Parent = settingsContent;
local settingsDesc = mainDesc:Clone(); settingsDesc.Text = "Ajuste as configurações do mod."; settingsDesc.Parent = settingsContent;
local saveButton = Instance.new("TextButton"); saveButton.Name = "SaveButton"; saveButton.Text = "Salvar Configurações"; saveButton.Font = Enum.Font.SourceSansBold; saveButton.TextSize = 16; saveButton.TextColor3 = Color3.fromRGB(255, 255, 255); saveButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80); saveButton.Size = UDim2.new(1, 0, 0, 40); saveButton.Parent = settingsContent; Instance.new("UICorner", saveButton).CornerRadius = UDim.new(0, 8);

-- Elementos Seção AI
local aiLayout = Instance.new("UIListLayout"); aiLayout.Padding = UDim.new(0, 5); aiLayout.Parent = aiContent;
local aiTitle = mainTitle:Clone(); aiTitle.Text = "AI ASSISTANT"; aiTitle.Parent = aiContent;
local aiDesc = mainDesc:Clone(); aiDesc.Text = "Digite 'ajuda' para ver a lista de comandos."; aiDesc.Parent = aiContent;
local chatLogContainer = Instance.new("ScrollingFrame"); chatLogContainer.Size = UDim2.new(1, 0, 1, -80); chatLogContainer.BackgroundColor3 = Color3.fromRGB(30,30,30); chatLogContainer.BorderSizePixel = 0; chatLogContainer.ScrollBarThickness = 6; chatLogContainer.Parent = aiContent; Instance.new("UICorner", chatLogContainer).CornerRadius = UDim.new(0,8)
local chatLogLayout = Instance.new("UIListLayout"); chatLogLayout.Padding = UDim.new(0, 5); chatLogLayout.Parent = chatLogContainer;
local commandInput = Instance.new("TextBox"); commandInput.Size = UDim2.new(1, 0, 0, 36); commandInput.BackgroundColor3 = Color3.fromRGB(45,45,45); commandInput.Font = Enum.Font.SourceSans; commandInput.TextSize = 14; commandInput.TextColor3 = Color3.fromRGB(220,220,220); commandInput.PlaceholderText = "Digite seu comando aqui..."; commandInput.ClearTextOnFocus = false; commandInput.Parent = aiContent; Instance.new("UICorner", commandInput).CornerRadius = UDim.new(0,8)

-- Elementos Adicionais
local minimizedPanel = Instance.new("TextButton"); minimizedPanel.Name = "MinimizedPanel"; minimizedPanel.Size = UDim2.new(0, 120, 0, 36); minimizedPanel.Position = UDim2.new(1, -140, 1, -50); minimizedPanel.Text = "CALVO MOD"; minimizedPanel.Font = Enum.Font.SourceSansBold; minimizedPanel.TextSize = 14; minimizedPanel.TextColor3 = Color3.fromRGB(255, 255, 255); minimizedPanel.BackgroundColor3 = Color3.fromRGB(40, 40, 40); minimizedPanel.BackgroundTransparency = 0.2; minimizedPanel.Visible = false; minimizedPanel.Parent = screenGui; Instance.new("UICorner", minimizedPanel).CornerRadius = UDim.new(0, 8); Instance.new("UIStroke", minimizedPanel).Transparency = 0.8;
stopSpectateButton = Instance.new("TextButton"); stopSpectateButton.Name = "StopSpectateButton"; stopSpectateButton.Size = UDim2.new(0, 150, 0, 40); stopSpectateButton.Position = UDim2.new(0.5, -75, 1, -60); stopSpectateButton.Text = "Parar de Telar"; stopSpectateButton.Font = Enum.Font.SourceSansBold; stopSpectateButton.TextColor3 = Color3.fromRGB(255,255,255); stopSpectateButton.BackgroundColor3 = Color3.fromRGB(220, 50, 50); stopSpectateButton.Visible = false; stopSpectateButton.Parent = screenGui; Instance.new("UICorner", stopSpectateButton).CornerRadius = UDim.new(0,8);
flyButtonsFrame = Instance.new("Frame"); flyButtonsFrame.Name = "FlyButtons"; flyButtonsFrame.Size = UDim2.new(0, 200, 0, 80); flyButtonsFrame.Position = UDim2.new(1, -220, 0.5, -40); flyButtonsFrame.BackgroundTransparency = 1; flyButtonsFrame.Visible = false; flyButtonsFrame.Parent = screenGui; local flyButtonsLayout = Instance.new("UIListLayout"); flyButtonsLayout.FillDirection = Enum.FillDirection.Horizontal; flyButtonsLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center; flyButtonsLayout.VerticalAlignment = Enum.VerticalAlignment.Center; flyButtonsLayout.Padding = UDim.new(0,10); flyButtonsLayout.Parent = flyButtonsFrame;
local flyUpButton = Instance.new("TextButton"); flyUpButton.Text = "⬆"; flyUpButton.Size = UDim2.new(0,80,0,80); flyUpButton.BackgroundColor3 = Color3.fromRGB(0,0,0); flyUpButton.BackgroundTransparency = 0.5; flyUpButton.TextColor3 = Color3.fromRGB(255,255,255); flyUpButton.Font = Enum.Font.SourceSansBold; flyUpButton.TextSize = 40; flyUpButton.Parent = flyButtonsFrame; Instance.new("UICorner", flyUpButton).CornerRadius = UDim.new(1,0);
local flyDownButton = Instance.new("TextButton"); flyDownButton.Text = "⬇"; flyDownButton.Size = UDim2.new(0,80,0,80); flyDownButton.BackgroundColor3 = Color3.fromRGB(0,0,0); flyDownButton.BackgroundTransparency = 0.5; flyDownButton.TextColor3 = Color3.fromRGB(255,255,255); flyDownButton.Font = Enum.Font.SourceSansBold; flyDownButton.TextSize = 40; flyDownButton.Parent = flyButtonsFrame; Instance.new("UICorner", flyDownButton).CornerRadius = UDim.new(1,0);
flyUpButton.InputBegan:Connect(function() while UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) and isFlying do rootPart.FlyVelocity.Velocity += Vector3.new(0, 2, 0); RunService.Heartbeat:Wait() end end);
flyDownButton.InputBegan:Connect(function() while UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton1) and isFlying do rootPart.FlyVelocity.Velocity -= Vector3.new(0, 2, 0); RunService.Heartbeat:Wait() end end);
local contextMenu = Instance.new("Frame"); contextMenu.Name = "PlayerContextMenu"; contextMenu.Size = UDim2.new(0, 150, 0, 140); contextMenu.BackgroundColor3 = Color3.fromRGB(40, 40, 40); contextMenu.BorderSizePixel = 0; contextMenu.Visible = false; contextMenu.Parent = screenGui; Instance.new("UICorner", contextMenu).CornerRadius = UDim.new(0, 6); Instance.new("UIStroke", contextMenu).Color = Color3.fromRGB(100,100,100); local cmLayout = Instance.new("UIListLayout"); cmLayout.Padding = UDim.new(0, 4); cmLayout.Parent = contextMenu; local cmPadding = Instance.new("UIPadding"); cmPadding.PaddingTop = UDim.new(0,4); cmPadding.PaddingBottom = UDim.new(0,4); cmPadding.Parent = contextMenu;

--======= LÓGICA DO ASSISTENTE AI =======--
local function addLogMessage(message, color) local msgLabel = Instance.new("TextLabel"); msgLabel.Text = "  " .. message; msgLabel.Font = Enum.Font.Code; msgLabel.TextSize = 14; msgLabel.TextColor3 = color or Color3.fromRGB(200, 200, 200); msgLabel.BackgroundTransparency = 1; msgLabel.TextXAlignment = Enum.TextXAlignment.Left; msgLabel.TextWrapped = true; msgLabel.Size = UDim2.new(1, 0, 0, 0); msgLabel.AutomaticSize = Enum.AutomaticSize.Y; msgLabel.Parent = chatLogContainer; chatLogContainer.CanvasPosition = Vector2.new(0, chatLogLayout.AbsoluteContentSize.Y) end
local function findPlayer(partialName) if not partialName then return nil end; local pName = partialName:lower(); for _, player in ipairs(Players:GetPlayers()) do if player.Name:lower():find(pName, 1, true) or player.DisplayName:lower():find(pName, 1, true) then return player end end; return nil end
local function parseCommand(commandText) addLogMessage("> " .. commandText, Color3.fromRGB(150, 150, 255)); local args = commandText:lower():split(" "); local cmd = args[1]; local target, value; if #args > 1 then target = findPlayer(args[2]); value = tonumber(args[2]) end; if cmd == "fly" or cmd == "voar" then setFly(not isFlying); addLogMessage("Voo " .. (isFlying and "ativado." or "desativado.")) elseif cmd == "speed" or cmd == "velocidade" then if value then setSpeed(value); addLogMessage("Velocidade definida para " .. value) else addLogMessage("Uso: speed [numero]") end elseif cmd == "god" then local state = args[2] == "on"; setGodMode(state); addLogMessage("Modo Deus " .. (state and "ativado." or "desativado.")) elseif cmd == "forcefield" or cmd == "ff" then local state = args[2] == "on"; setForcefield(state); addLogMessage("Forcefield " .. (state and "ativado." or "desativado.")) elseif cmd == "noclip" then setNoclip(not isNoclip); addLogMessage("Noclip " .. (isNoclip and "ativado." or "desativado.")) elseif cmd == "tp" or cmd == "teleport" or cmd == "teleportar" then if target then teleportToPlayer(target); addLogMessage("Teleportando para " .. target.Name) else addLogMessage("Jogador não encontrado.") end elseif cmd == "puxar" or cmd == "pull" then if target then pullPlayer(target); addLogMessage("Puxando " .. target.Name) else addLogMessage("Jogador não encontrado.") end elseif cmd == "copiar" or cmd == "copiarskin" then if target then copySkin(target); addLogMessage("Skin copiada de " .. target.Name) else addLogMessage("Jogador não encontrado.") end elseif cmd == "telar" or cmd == "spectate" then if target then spectatePlayer(target); addLogMessage("Telando " .. target.Name) else addLogMessage("Jogador não encontrado.") end elseif cmd == "stop" or cmd == "parar" then spectatePlayer(nil, true); addLogMessage("Função parada.") elseif cmd == "ajuda" or cmd == "help" then addLogMessage("Comandos: fly, speed, god, forcefield, noclip, tp, puxar, copiar, telar, parar.", Color3.fromRGB(100, 255, 100)) else addLogMessage("Comando não reconhecido.", Color3.fromRGB(255, 100, 100)) end end
commandInput.FocusLost:Connect(function(enterPressed) if enterPressed and commandInput.Text ~= "" then parseCommand(commandInput.Text); commandInput.Text = "" end end)

--======= LÓGICA GERAL DO PAINEL =======--
local function makeDraggable(guiObject) local dragging = false; local dragStart; local startPos; guiObject.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then dragging = true; dragStart = input.Position; startPos = guiObject.Position; local conn; conn = input.Changed:Connect(function() if input.UserInputState == Enum.UserInputState.End then dragging = false; conn:Disconnect() end end) end end); UserInputService.InputChanged:Connect(function(input) if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then local delta = input.Position - dragStart; guiObject.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y) end end) end
makeDraggable(panelHeader); makeDraggable(minimizedPanel);
closeButton.MouseButton1Click:Connect(function() modPanel.Visible = false end); minimizeButton.MouseButton1Click:Connect(function() modPanel.Visible = false; minimizedPanel.Visible = true end); minimizedPanel.MouseButton1Click:Connect(function() modPanel.Visible = true; minimizedPanel.Visible = false; end)
stopSpectateButton.MouseButton1Click:Connect(function() spectatePlayer(nil, true) end)
local menuButtons = {}
local function createMenuButton(text, targetId, iconId, layoutOrder) local button = Instance.new("TextButton"); button.Name = text .. "Button"; button.Size = UDim2.new(1, 0, 0, 40); button.Text = ""; button.BackgroundColor3 = Color3.fromRGB(255, 255, 255); button.BackgroundTransparency = 1; button.LayoutOrder = layoutOrder; button.Parent = sidebar; local uiListLayout = Instance.new("UIListLayout"); uiListLayout.FillDirection = Enum.FillDirection.Horizontal; uiListLayout.VerticalAlignment = Enum.VerticalAlignment.Center; uiListLayout.Padding = UDim.new(0, 10); uiListLayout.Parent = button; local selectionIndicator = Instance.new("Frame"); selectionIndicator.Name = "SelectionIndicator"; selectionIndicator.Size = UDim2.new(0, 2, 1, 0); selectionIndicator.BackgroundColor3 = Color3.fromRGB(59, 130, 246); selectionIndicator.BorderSizePixel = 0; selectionIndicator.Visible = false; selectionIndicator.Parent = button; local iconImg = Instance.new("ImageLabel"); iconImg.Image = iconId; iconImg.Size = UDim2.new(0, 20, 0, 20); iconImg.BackgroundTransparency = 1; iconImg.ImageColor3 = Color3.fromRGB(200, 200, 200); iconImg.Parent = button; local label = Instance.new("TextLabel"); label.Text = string.upper(text); label.Font = Enum.Font.SourceSans; label.TextSize = 14; label.TextColor3 = Color3.fromRGB(200, 200, 200); label.BackgroundTransparency = 1; label.TextXAlignment = Enum.TextXAlignment.Left; label.Size = UDim2.new(1, -32, 1, 0); label.Parent = button; table.insert(menuButtons, {button = button, target = targetId, indicator = selectionIndicator}); return button end
createMenuButton("MAIN", "main-content", "rbxassetid://7923390289", 1); createMenuButton("Players", "players-content", "rbxassetid://7923401584", 2); createMenuButton("AI", "ai-content", "rbxassetid://10698223992", 3); createMenuButton("Settings", "settings-content", "rbxassetid://7923396924", 4);
local function switchTab(targetId) for _, child in pairs(contentArea:GetChildren()) do if child:IsA("Frame") then child.Visible = (child.Name == targetId) end end; for _, mb in ipairs(menuButtons) do local isSelected = (mb.target == targetId); mb.indicator.Visible = isSelected; mb.button.BackgroundTransparency = isSelected and 0.8 or 1 end end
for _, mb in ipairs(menuButtons) do mb.button.MouseButton1Click:Connect(function() switchTab(mb.target); contextMenu.Visible = false end) end
local function createContextMenuButton(text, callback) local button = Instance.new("TextButton"); button.Name = text .. "Button"; button.Size = UDim2.new(1, -8, 0, 30); button.Position = UDim2.new(0.5, 0, 0, 0); button.AnchorPoint = Vector2.new(0.5, 0); button.Text = text; button.Font = Enum.Font.SourceSans; button.TextSize = 14; button.TextColor3 = Color3.fromRGB(220, 220, 220); button.BackgroundTransparency = 1; button.Parent = contextMenu; button.MouseButton1Click:Connect(function() contextMenu.Visible = false; if currentPlayerTarget then callback(currentPlayerTarget) end end) end
createContextMenuButton("Teleportar", teleportToPlayer); createContextMenuButton("Puxar Jogador", pullPlayer); createContextMenuButton("Copiar Skin", copySkin); createContextMenuButton("Telar Jogador", function(target) spectatePlayer(target, false) end)
local function renderPlayerList() for _, child in ipairs(playerListContainer:GetChildren()) do if not child:IsA("UILayout") then child:Destroy() end end; for _, player in ipairs(Players:GetPlayers()) do if player ~= localPlayer then local playerFrame = Instance.new("Frame"); playerFrame.Name = player.Name; playerFrame.Size = UDim2.new(1, 0, 0, 40); playerFrame.BackgroundColor3 = Color3.fromRGB(70, 70, 70); playerFrame.BackgroundTransparency = 0.5; playerFrame.Parent = playerListContainer; Instance.new("UICorner", playerFrame).CornerRadius = UDim.new(0, 6); local layout = Instance.new("UIListLayout"); layout.FillDirection = Enum.FillDirection.Horizontal; layout.VerticalAlignment = Enum.VerticalAlignment.Center; layout.Padding = UDim.new(0, 10); layout.Parent = playerFrame; local padding = Instance.new("UIPadding"); padding.PaddingLeft = UDim.new(0, 10); padding.PaddingRight = UDim.new(0, 10); padding.Parent = playerFrame; local playerNameLabel = Instance.new("TextLabel"); playerNameLabel.Text = player.DisplayName; playerNameLabel.Font = Enum.Font.SourceSans; playerNameLabel.TextSize = 14; playerNameLabel.TextColor3 = Color3.fromRGB(220, 220, 220); playerNameLabel.BackgroundTransparency = 1; playerNameLabel.TextXAlignment = Enum.TextXAlignment.Left; playerNameLabel.Size = UDim2.new(1, -80, 1, 0); playerNameLabel.Parent = playerFrame; local actionButton = Instance.new("TextButton"); actionButton.Text = "Ação"; actionButton.Font = Enum.Font.SourceSansBold; actionButton.TextSize = 12; actionButton.TextColor3 = Color3.fromRGB(255, 255, 255); actionButton.BackgroundColor3 = Color3.fromRGB(90, 90, 90); actionButton.Size = UDim2.new(0, 60, 0, 24); actionButton.Parent = playerFrame; Instance.new("UICorner", actionButton).CornerRadius = UDim.new(0, 4); actionButton.MouseButton1Click:Connect(function() currentPlayerTarget = player; contextMenu.Position = UDim2.fromOffset(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y); contextMenu.Visible = true end) end end end
updatePlayersButton.MouseButton1Click:Connect(renderPlayerList)
UserInputService.InputBegan:Connect(function(input, gameProcessed) if not gameProcessed and input.UserInputType == Enum.UserInputType.MouseButton1 then if contextMenu.Visible then local objects = playerGui:GetGuiObjectsAtPosition(input.Position.X, input.Position.Y); local clickedContextMenu = false; for _,v in pairs(objects) do if v:IsDescendantOf(contextMenu) then clickedContextMenu=true; break; end end; if not clickedContextMenu then contextMenu.Visible = false end end end end)

--======= INICIALIZAÇÃO =======--
switchTab("main-content")
addLogMessage("Olá! Sou a AI do CALVO MOD. Digite 'ajuda' para começar.", Color3.fromRGB(100, 255, 100))
print("Painel CALVO MOD v3.0 (AI Edition) carregado com sucesso.")